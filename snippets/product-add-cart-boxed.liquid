<section itemscope itemtype="http://schema.org/Product" class="product product--lg product--alt product--boxed">
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}">

  <div class="wrapper">
    <div class="grid">
      <div class="grid__item">
        <div class="product__block">
          <div class="product__block-item">      
            <!-- Swiper -->
            <div class="swiper-container carousel carousel--product-gallery">
              <div class="swiper-wrapper">
                {% if product.variants.size > 1 %}
                
                  {% assign image_urls = '' %}
                  {% for variant in product.variants limit: 4 %}
                    <div class="swiper-slide" data-variant-id="{{ variant.id }}" data-slide-index="{{ forloop.index }}">
                      <div class="img-holder">
                        <img src="{{ variant.image | img_url: '1024x1024'}}">
                      </div>
                    </div>

                    {% capture image_url %}{{ variant.image | img_url: '1024x1024' }}{% endcapture %}

                    {% if forloop.last == true %}
                        {% assign image_urls = image_urls | append: image_url %}
                    {% else %}
                        {% assign image_urls = image_urls | append: image_url | append: ',' %}
                    {% endif %}


                  {% endfor %}
                {% else %}
                
                  {% assign image_urls = '' %}
                  {% for image in product.images limit: 4 %}
                    <div class="swiper-slide">
                      <div class="img-holder">
                        <img src="{{ image.src | product_img_url: '1024x1024' }}">
                      </div>
                    </div>

                    {% capture image_url %}{{ image.src | product_img_url: '1024x1024' }}{% endcapture %}

                    {% if forloop.last == true %}
                        {% assign image_urls = image_urls | append: image_url %}
                    {% else %}
                        {% assign image_urls = image_urls | append: image_url | append: ',' %}
                    {% endif %}

                  {% endfor %}
                
                {% endif %}
        
              </div>
              
              {% comment %}{% if product.images.size > 1 %}
                <div class="carousel__navigation"></div>
                <div class="swiper-button-next carousel-button-next">
                  <span class="icon icon--arrow-right"></span>
                </div>
                <div class="swiper-button-prev carousel-button-prev">
                  <span class="icon icon--arrow-left"></span>
                </div>
              {% endif %}{% endcomment %}
            </div>
            
            
          </div>
        
          <div class="product__block-item">
            <div class="product__content">
              <h1 itemprop="name" class="product__title">{{ product.title }}</h1>
              <div class="product__info">
                <span class="product__spec">
                  {{ product.type | link_to_type }} |

                  {% if product.available %}
                    {{ 'products.general.in_stock' | t }}
                  {% else %}
                    {{ 'products.general.out_stock' | t }}
                  {% endif %} |
                  
                  {{ product.first_available_variant.weight | weight_with_unit }}
                           
                </span>
                <div class="product__desc">
                  {% assign content_html = product.description %}
                  {% include 'strip_html_tags' with content_html %}
            
                  {% assign split_nutritional = '[Nutritional value]' %}
                    {% if content_html contains split_nutritional %}
                      {% assign description_text = content_html | split: split_nutritional | first %}
                      {% assign nutritional_value_text = content_html | split: split_nutritional | last %}
                    {% endif %}
                    
                    {% comment %}
                    Product decription
                    {% endcomment %}
                    {% if settings.product_description_enable %}
                      <div itemprop="description" class="rte product__desc-content">
                        {% if description_text != blank %}
                          {{ description_text }}
                        {% else %}
                          {{ product.description }}
                        {% endif %} 
                      </div>
                    {% endif %}
                </div>
                {% comment %}
                Add to cart button
                {% endcomment %}
                <div class="form-wrapper">
                  <form class="form form--default" action="/cart/add" method="post">
                    <div class="form__row">
                      {% if product.variants.size > 1 and product.available %}
                        
                        <select id="product-variants" name="id">
                          {% for variant in product.variants %}
                            <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
                          {% endfor %}
                        </select>
        
                      {% else %}
        
                        <input type="hidden" name="id" value="{{ product.variants[0].id }}" />              
                      {% endif %}
                    </div>
                    <div class="form__row">
                      <div class="quantity-field">
                        <span class="icon icon--arrow-right js-up-quantity"></span>
                        <input class="form__field" type="number" id="quantity" name="quantity" value="1" min="1" >
                        <span class="icon icon--arrow-left js-down-quantity"></span>
                      </div>
                      <span class="js-price-and-value">x <span class="money">{{ product.price | money }}</span> = <span class="js-total-price money">{{ product.price | money }}</span></span>
                    </div>
                    <div class="form__row">
                      <button {% unless product.available %}disabled{% endunless %} class="btn btn--default btn--full btn--submit {% unless product.available %}btn--disabled{% endunless %} js-add-to-card" type="submit" >{% unless product.available %}{{ 'products.general.out_stock' | t }}{% else %} {{ 'layout.general.add_to_cart_button' | t }}{% endunless %}</button>
                    </div>
                  </form>
                </div> <!-- End form-wrapper -->
        
                {% if settings.wishlist_enable %}
              
                  <div class="form-wrapper form-wrapper--wishlist js-wishlist-form">
                    {% if customer %}
                      {% assign value = product.id %}
                      {% capture productID %}{{ product.id }}{% endcapture %}
                      {% for tag in customer.tags %}
                        {% capture tagID %}{{ tag }}{% endcapture %}
                        {% if tagID contains productID %}
                          {% capture value %}x{{ tagID }}{% endcapture %}
                        {% endif %}
                        {% if value.size == 0 %}{% assign value = productID %}{% endif %}
                      {% endfor %}
                  
                      {% unless value.size == 0 %}
                        {% capture check %}{{ value.size | minus:productID.size | money_without_currency | times:100 | divided_by:2 }}{% endcapture %}
                        {% assign check = check | split:'.' %}
                        {% if check[1] contains "5" %}{% assign display = false %}{% else %}{% assign display = true %}{% endif %}
                      {% endunless %}
                  
                      {% if display %}
                        <form accept-charset="UTF-8" id="add-to-wish-list" action="/contact" method="post">
                          <input name="form_type" type="hidden" value="customer">
                          <input name="utf8" type="hidden" value="âœ“">
                          <input type="hidden" name="contact[email]" value="{{ customer.email }}"/>
                          <input id="update-me" type="hidden" name="contact[tags]" value="{{ value }}" />
                          <button class="text-link--default" type="submit">
                          <span class="icon icon--plus"></span>
                          {{ 'layout.wishlist_page.add_to_wishlist' | t }}
                          </button>
                        </form>
                      {% else %}
                        <p>{{ 'layout.wishlist_page.added_to_wishlist' | t }} <a class="text-link--default" href="/pages/wishlist">{{ 'layout.wishlist_page.wishlist' | t }}</a></p>
                      {% endif %}
                    {% endif %}
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
<script>
  var selectVariantsDOM     = document.getElementById('product-variants');
  var swiperContainerDOM    = document.querySelector('.carousel--product-gallery');
  var carouselSwiper;
  
  initVariants();

  function initVariants () {
    var radioBtnContainerDOM  = document.createElement('div');
    var wrapperRadioBtnDOM;

    if ( !selectVariantsDOM ) {
      return null;
    }

    selectVariantsDOM.style.display = 'none';

    for ( var i = 0, max = selectVariantsDOM.options.length; i < max; i++ ) {
      wrapperRadioBtnDOM = greateRadioVariantsDOM(selectVariantsDOM.options[i]);
      radioBtnContainerDOM.appendChild(wrapperRadioBtnDOM);
    }

    radioBtnContainerDOM.className = 'product-variants-radio-btns';

    selectVariantsDOM.parentElement.insertBefore(radioBtnContainerDOM, selectVariantsDOM.nextSibling);
  }

  function greateRadioVariantsDOM(option) {

    if ( !option ) {
      return null;
    }

    var optionText = option.textContent.toLowerCase()

    var wrapperDOM = document.createElement('div');
    var productPriceDOM      = selectVariantsDOM.parentElement.parentElement.querySelector('.js-price-and-value > .money');
    var productPriceTotalDOM = selectVariantsDOM.parentElement.parentElement.querySelector('.js-total-price');
    var product
    wrapperDOM.className = 'radio-btn'

    var labelDOM = document.createElement('label');
    labelDOM.innerHTML = option.innerHTML;
    labelDOM.setAttribute('for', optionText);

    var radioBtnDOM   = document.createElement('input');
    radioBtnDOM.type  = 'radio';
    radioBtnDOM.name  = 'variants';
    radioBtnDOM.id    = optionText;
    radioBtnDOM.value = option.value;
    radioBtnDOM.setAttribute('data-price', option.getAttribute('data-variant-price') );

    if ( option.selected) {
      radioBtnDOM.checked = true;
    }

    radioBtnDOM.addEventListener('change', function(e){
      var price;
      
      selectVariantsDOM.value = e.currentTarget.value;
      price = e.currentTarget.getAttribute('data-price');
      
      {% if settings.show_multiple_currencies %}      
      if ( productPriceDOM.getAttribute('data-currency') !== '' ){
        productPriceDOM.removeAttribute('data-currency-' + Currency.currentCurrency.toLowerCase());
        productPriceDOM.removeAttribute('data-currency');
      }
      if ( productPriceTotalDOM.getAttribute('data-currency') !== '' ){
        productPriceTotalDOM.removeAttribute('data-currency-' + Currency.currentCurrency.toLowerCase());
        productPriceTotalDOM.removeAttribute('data-currency');
      }
      {% endif %}
      
      productPriceDOM.innerHTML = Shopify.formatMoney(price, "{{ shop.money_format }}");
      productPriceTotalDOM.innerHTML = Shopify.formatMoney(price, "{{ shop.money_format }}");
                                                      
      {% if settings.show_multiple_currencies %} 
                                                      
      if ( Currency && window.shopCurrency != Currency.currentCurrency ) {
        Currency.convertAll(shopCurrency, $('[name=currencies]').val(), '.form span.money', 'money_format');
      }
      
      {% endif %}
      
      
      var choosedVariantImage = swiperContainerDOM.querySelector('[data-variant-id="' + e.currentTarget.value + '"]');
      var imageIndex = parseInt(choosedVariantImage.getAttribute('data-slide-index'));
      carouselSwiper.slideTo(imageIndex);
      
      
      var quantityInputDOM = selectVariantsDOM.parentElement.parentElement.querySelector('.form__field[name=quantity]');
      var event = new Event('change');
      quantityInputDOM.dispatchEvent(event)
      
    })

    var radioPointDOM = document.createElement('span');
    radioPointDOM.className = 'radio-point';
    radioPointDOM.style.backgroundColor = optionText;

    wrapperDOM.appendChild(radioBtnDOM);
    wrapperDOM.appendChild(labelDOM);
    wrapperDOM.appendChild(radioPointDOM);
    
    return wrapperDOM;
  };
  
  
  var productBoxed = document.querySelector('.carousel--product-gallery');
  
  function initProductBoxedCarousel(carouselContainer){
    
    var imagesUrls = {{ image_urls | json }};
    var imagesUrlsArr = imagesUrls.split(',');
    

    carouselSwiper = new Swiper(carouselContainer, {
        speed: 400,
        spaceBetween: 0,
        loop: true,
        pagination: '.carousel__navigation',
        paginationClickable: true,
        paginationBulletRender: function (index, className) {
            return '<span class="' + className + '">' + '<img src="' + imagesUrlsArr[index] + '">' + '</span>';
        }
    });
  }
  
  if ( productBoxed ) {
    
    require("{{ 'swiper.min.js' | asset_url }}", function(){
            
      initProductBoxedCarousel(productBoxed);
    });
  }



</script>
